{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/cell.ts","webpack:///./src/point.ts","webpack:///./test/index.ts","webpack:///./test/test-duplicates.ts","webpack:///./src/CONFIGURATION.ts","webpack:///./src/math.ts","webpack:///./src/behaviors/move.ts","webpack:///./src/color.ts","webpack:///./src/lulas.ts","webpack:///./src/behaviors/bounceOnCorners.ts","webpack:///./src/behaviors/flocking.ts","webpack:///./src/behaviors/solidBody.ts","webpack:///./src/index.ts","webpack:///./test/user-stories.ts","webpack:///./user-stories sync \\.ts$","webpack:///./user-stories/0 - As a developer I want to run tests.test.ts","webpack:///./user-stories/1 - As a user I want to see cells.test.ts","webpack:///./user-stories/2 - As a user I want to watch them move.test.ts","webpack:///./user-stories/3 - As a user I want them to bounce on the corners.test.ts","webpack:///./user-stories/4 - As a user I want to watch them follow flocking behaviour.test.ts","webpack:///./test/assertions.ts","webpack:///./user-stories/5 - As a user I want to watch the cell not overlap.test.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","point_1","CONFIGURATION_1","color_1","lastId","createCell","partial","__assign","id","color","position","vector","velocity","acceleration","radius","DEFAULT_RADIUS","vision","DEFAULT_VISION_FACTOR","cellDistance","left","right","magnitude","subtractVectors","renderCell","context","cell","angleCorrection","Math","PI","save","translate","x","y","rotate","radians","beginPath","arc","lineTo","closePath","lineWidth","strokeStyle","fillStyle","bajarColor","stroke","fill","console","log","restore","logCell","logVector","isZero","_a","sqrt","pow","normalize","point","targetMagnitude","mag","vectorAxis","axis","atan2","operate","getAngle","limitVector","limit","sumVectors","sumVectorList","vectors","map","v","reduce","a","b","multiplyVectors","tests","documentTitle","document","title","file","executeTest","message","table","run","isJestTesting","groupCollapsed","runTest","groupEnd","global","test","error","write","stack","replace","printError","setFailState","body","style","backgroundColor","Boolean","first","second","Array","isArray","unit","runTests","background","lastFile","_i","tests_1","setSuccessState","setFilename","dirname","filename","lulas_1","cell_1","createTestLulas","config","default","canvas","createElement","cells","worldSize","behaviors","MAX_SPEED","MAX_FORCE","COLLISION_FRICTION","FLOCKING_ALIGMENENT_FACTOR","FLOCKING_COHESION_FACTOR","FLOCKING_SEPARATION_FACTOR","FLOCKING_SEPARATION_VISION_LIMIT","FLOCKING_SEPARATION_BORDER_LIMIT","getSign","abs","random","min","max","round","move","math_1","toString","g","alpha","toHex","val","randomColor","percent","rgba","match","Error","parseInt","toRGBA","lulas","_b","width","height","getContext","renderCellToContext","currentCell","world","size","look","target","filter","step","forEach","render","clearRect","bounceOnCorners","alignement","neighbors","sum","average","relative","align","cohesion","cohece","separation","requireNeighbors","fn","flocking","alignementBehavior","cohesionBehavior","separationBehavior","collide","correction","adjustment","factor","vel","collisionBrake_bounce","solidBody","collision","other","minDistance","distance","index_1","flocking_1","move_1","bounceOnCorners_1","solidBody_1","__awaiter","fullscreen","margin","padding","documentElement","el","assign","setStyles","sent","appendChild","innerWidth","innerHeight","center","game","operator","_","array","join","requestAnimationFrame","frame","start","setTimeout","keys","./0 - As a developer I want to run tests.test.ts","./1 - As a user I want to see cells.test.ts","./2 - As a user I want to watch them move.test.ts","./3 - As a user I want them to bounce on the corners.test.ts","./4 - As a user I want to watch them follow flocking behaviour.test.ts","./5 - As a user I want to watch the cell not overlap.test.ts","webpackContext","req","webpackContextResolve","e","code","resolve","isTestRunning","__dirname","__filename","assert","test_duplicates_1","isCanvasBlank_browser","getImageData","some","channel","isCanvasBlank_mock","__getEvents","every","type","isCanvasBlank","assert_1","pos","equal","exp","assertions_1","assert_2","targetVel","neighborVel","angleBefore","neighborAngle","sut","angleAfter","notEqual","assertBetweenOrEqual","cellPosition","separationAngle","assertBetween","finalMessage","pos1","pos2","expected"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([14,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n  Vector,\n  vector,\n  logVector,\n  magnitude,\n  subtractVectors,\n  radians,\n} from './point';\nimport { DEFAULT_VISION_FACTOR, DEFAULT_RADIUS } from './CONFIGURATION';\nimport { bajarColor, Color } from './color';\n\nexport type CellId = '[number CellId]';\nlet lastId = 0;\n\nfunction getNextId() {\n  return (lastId++ as any) as CellId;\n}\n\nexport interface Cell {\n  id: CellId;\n  color: Color;\n  position: Vector;\n  velocity: Vector;\n  acceleration: Vector;\n  radius: number;\n  vision: number;\n}\n\nexport function createCell(partial?: Partial<Cell>): Cell {\n  return {\n    id: getNextId(),\n    color: '#ffffff' as Color,\n    position: vector(0),\n    velocity: vector(0),\n    acceleration: vector(0),\n    radius: DEFAULT_RADIUS,\n    vision:\n      (partial && partial.radius ? partial.radius : DEFAULT_RADIUS) *\n      DEFAULT_VISION_FACTOR,\n    ...partial,\n  };\n}\n\nexport function cellDistance(left: Cell, right: Cell) {\n  return magnitude(subtractVectors(left.position, right.position));\n}\n\nexport function renderCell(context: CanvasRenderingContext2D, cell: Cell) {\n  const angleCorrection = Math.PI / 4;\n\n  context.save();\n\n  context.translate(cell.position.x, cell.position.y);\n  context.rotate(radians(cell.velocity) + angleCorrection);\n  context.beginPath();\n  context.arc(0, 0, cell.radius, 0, Math.PI * 1.5);\n  context.lineTo(cell.radius, -cell.radius);\n  // context.lineTo(cell.radius, 0);\n  context.closePath();\n  context.lineWidth = 5;\n  context.strokeStyle = cell.color;\n  context.fillStyle = bajarColor(cell.color, 0.5);\n  context.stroke();\n  context.fill();\n\n  console.log(bajarColor(cell.color, 0.3));\n\n  context.restore();\n\n  // context.beginPath();\n  // context.arc(cell.position.x, cell.position.y, cell.vision, 0, Math.PI * 2);\n  // context.strokeStyle = 'red';\n  // context.stroke();\n}\n\nexport function logCell(cell: Cell) {\n  return `Cell(${cell.id}) ${cell.radius} { pos: ${logVector(\n    cell.position,\n  )}, vel: ${logVector(cell.velocity)} }`;\n}\n","export interface Vector {\n  x: number;\n  y: number;\n}\n\nexport function vector(x: number, y = x): Vector {\n  return { x, y };\n}\n\nexport function isZero({ x, y }: Vector) {\n  return x === 0 && y === 0;\n}\n\nexport function magnitude({ x, y }: Vector) {\n  return Math.sqrt(x ** 2 + y ** 2);\n}\n\nexport function normalize(point: Vector, targetMagnitude = 1) {\n  if (isZero(point)) {\n    return { ...point };\n  }\n\n  const mag = magnitude(point);\n  return vectorAxis((axis) => (point[axis] * targetMagnitude) / mag);\n}\n\nexport function radians({ x, y }: Vector) {\n  return Math.atan2(y, x);\n}\n\nexport function getAngle(vector: Vector) {\n  return (radians(vector) * 180) / Math.PI;\n}\n\nexport function limitVector(point: Vector, limit: number) {\n  const mag = magnitude(point);\n  return mag > limit ? normalize(point, limit) : point;\n}\n\nexport function sumVectors(left: Vector, right: Vector): Vector {\n  return vectorAxis((axis) => left[axis] + right[axis]);\n}\n\nexport function sumVectorList(vectors: Vector[]): Vector {\n  return vectorAxis((axis) =>\n    vectors.map((v) => v[axis]).reduce((a, b) => a + b),\n  );\n}\n\nexport function subtractVectors(left: Vector, right: Vector) {\n  return vectorAxis((axis) => left[axis] - right[axis]);\n}\n\nexport function multiplyVectors(point: Vector, value: number) {\n  return vectorAxis((axis) => point[axis] * value);\n}\n\nexport function vectorAxis(operate: (key: 'x' | 'y') => number): Vector;\nexport function vectorAxis(operate: (key: 'x' | 'y') => void): void;\nexport function vectorAxis(\n  operate: (key: 'x' | 'y') => number | void,\n): Vector | void {\n  const x = operate('x');\n  const y = operate('y');\n\n  if (typeof x === 'number' && typeof y === 'number') {\n    return { x, y };\n  }\n}\n\nexport function logVector(point: Vector) {\n  return `(${point.x},${point.y})`;\n}\n","type TestRun<T extends any[]> = (...args: T) => Promise<any> | void;\n\ninterface UnitTest_Basic {\n  file: string;\n  message: string;\n  table: null;\n  run: TestRun<[]>;\n}\n\ninterface UnitTest_Table<T extends any[] = []> {\n  file: string;\n  message: string;\n  table: T[];\n  run: TestRun<T>;\n}\n\ntype UnitTest<T extends any[]> = UnitTest_Basic | UnitTest_Table<T>;\n\n// -----\n\nconst tests: UnitTest<any>[] = [];\nconst documentTitle = document.title;\nlet file = '';\n\nexport const isJestTesting = Boolean(\n  typeof global !== 'undefined' && (global as any).test,\n);\n\nexport function test(message: string, run: TestRun<[]>): void;\nexport function test<T extends any[]>(\n  message: string,\n  table: T[],\n  run: TestRun<T>,\n): void;\n\nexport function test<T extends any[]>(\n  message: string,\n  first: TestRun<[]> | T[],\n  second?: TestRun<T>,\n): void {\n  const table = Array.isArray(first) ? first : null;\n  const run = table ? second : (first as TestRun<T>);\n  const unit = { file, message, table, run } as UnitTest<T>;\n\n  if (isJestTesting) {\n    executeTest(unit);\n  } else {\n    tests.push(unit);\n  }\n}\n\nexport function runTests({ background }: { background?: string } = {}) {\n  setInitialState();\n  let lastFile = '';\n\n  for (const unit of tests) {\n    if (!isJestTesting && unit.file !== lastFile) {\n      console.groupEnd();\n      lastFile = unit.file;\n      console.groupCollapsed(unit.file);\n    }\n\n    executeTest(unit);\n  }\n\n  if (!isJestTesting) {\n    console.groupEnd();\n  }\n\n  tests.length = 0;\n  document.title = documentTitle;\n  setSuccessState(background);\n}\n\nexport function setFilename(dirname: string, filename: string) {\n  file = filename.replace(`${dirname}/`, '').replace(/(\\.test)?\\.ts$/, '');\n}\n\nfunction executeTest<T extends any[]>({\n  file,\n  message,\n  table,\n  run,\n}: UnitTest<T>) {\n  if (!table) {\n    runTest(file, message, run as TestRun<[]>);\n    return;\n  }\n\n  if (!isJestTesting) {\n    console.groupCollapsed(message);\n  }\n\n  for (let i = 0; i < table.length; i++) {\n    runTest(file, `${message} [${i}]`, () => run(...table[i]));\n  }\n\n  if (!isJestTesting) {\n    console.groupEnd();\n  }\n}\n\nfunction runTest(file: string, message: string, run: TestRun<[]>) {\n  if (isJestTesting) {\n    (global as any).test(message, run);\n    return;\n  }\n\n  try {\n    run();\n    console.log(`${message} 🟢`);\n  } catch (error) {\n    printError(file, error, message);\n    setFailState();\n    throw error;\n  }\n}\n\nfunction printError(file: string, error: Error, message: string) {\n  console.log(`${message} 🔴`);\n  console.error(error);\n  document.write(`\n    <div style=\"display: flex; align-items:center; justify-content: center; height: 100%\">\n    <span>\n      <h1>${file}</h1>\n      <h2>${message}</h2>\n      <pre>${error.stack?.replace('\\n', '<br>')}}</pre>\n    </span>\n    </div>\n  `);\n}\n\n// -----\n\nfunction setInitialState() {\n  setFailState();\n}\n\nfunction setFailState() {\n  document.body.style.backgroundColor = '#440000';\n}\n\nfunction setSuccessState(background = 'green') {\n  document.body.style.backgroundColor = background;\n}\n","import lulas, { LulasConfig } from '../src/lulas';\nimport { createCell } from '../src/cell';\n\nexport function createTestLulas(config: Partial<LulasConfig> = {}) {\n  return lulas({\n    canvas: document.createElement('canvas'),\n    cells: [createCell()],\n    worldSize: { x: 1000, y: 1000 },\n    behaviors: [],\n    ...config,\n  });\n}\n","export const DEFAULT_RADIUS = 5;\nexport const MAX_SPEED = 2;\nexport const MAX_FORCE = 0.5;\n\n// Multiplier for cell's radius\nexport const DEFAULT_VISION_FACTOR = 10;\n\n// Friction when two cells collide\nexport const COLLISION_FRICTION = 0.5;\n\nexport const FLOCKING_ALIGMENENT_FACTOR = 0.05;\nexport const FLOCKING_COHESION_FACTOR = 0.001;\nexport const FLOCKING_SEPARATION_FACTOR = 0.005;\n\n// Multiplier over cell's vision\nexport const FLOCKING_SEPARATION_VISION_LIMIT = 0.5;\n// From this point separation becomes stronger\nexport const FLOCKING_SEPARATION_BORDER_LIMIT = 0.1;\n","export function getSign(value: number) {\n  if (value === 0) {\n    return 0;\n  }\n\n  return value / Math.abs(value);\n}\n\nexport function random(first: number, second = -first) {\n  const min = Math.min(first, second);\n  const max = Math.max(first, second);\n  return Math.round(Math.random() * (max - min) + min);\n}\n","import { MAX_SPEED, MAX_FORCE } from './../CONFIGURATION';\nimport { Cell } from '../cell';\nimport { sumVectors, limitVector, vector } from '../point';\n\nexport function move(cell: Cell) {\n  cell.velocity = sumVectors(\n    cell.velocity,\n    limitVector(cell.acceleration, MAX_FORCE),\n  );\n\n  // limitVector(a, MAX_SPEED);\n\n  cell.acceleration = vector(0);\n\n  cell.position.x += cell.velocity.x;\n  cell.position.y += cell.velocity.y;\n}\n","import { random } from './math';\n\nexport type Color = '[string Color]';\n\nexport function randomColor() {\n  return toString({\n    r: random(100, 200),\n    g: random(100, 200),\n    b: random(100, 200),\n    a: 1,\n  });\n}\n\nexport function bajarColor(color: Color, percent: number) {\n  const rgba = toRGBA(color);\n  rgba.r *= percent;\n  rgba.g *= percent;\n  rgba.b *= percent;\n  // rgba.a *= percent;\n  return toString(rgba);\n}\n\nfunction toRGBA(color: Color): RGBA {\n  const match = color.match(/#(\\w{2})(\\w{2})(\\w{2})(\\w{2})?/);\n\n  if (!match) {\n    throw new Error(`DAFUK COLOR IS DIS? ${color}`);\n  }\n\n  const [_, r, g, b, a] = match;\n\n  return {\n    r: parseInt(r, 16),\n    g: parseInt(g, 16),\n    b: parseInt(b, 16),\n    a: a ? parseInt(a, 16) / 255 : 1,\n  };\n}\n\nfunction toString({ r, g, b, a: alpha }: RGBA): Color {\n  const a = toHex(Math.round(alpha * 255));\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}${a}` as Color;\n}\n\nfunction toHex(val: number) {\n  const result = Math.round(val).toString(16);\n  return result.length === 1 ? `0${result}` : result;\n}\n\ninterface RGBA {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n","import { Vector } from './point';\nimport { Cell, cellDistance, renderCell } from './cell';\n\nexport interface World {\n  size: Vector;\n  look: (radius: number) => Cell[];\n}\n\nexport type Behavior = (cell: Cell, world: World) => void;\n\nexport interface LulasConfig {\n  canvas: HTMLCanvasElement;\n  cells: Cell[];\n  behaviors: Behavior[];\n  worldSize?: Vector;\n}\n\nexport function lulas({\n  canvas,\n  cells,\n  behaviors,\n  worldSize = { x: canvas.width, y: canvas.height },\n}: LulasConfig) {\n  const context = canvas.getContext('2d')!;\n  const renderCellToContext = renderCell.bind(null, context);\n\n  let currentCell: Cell | null = null;\n  const world = {\n    size: worldSize,\n    look(radius: number) {\n      return look(currentCell!, radius);\n    },\n  };\n\n  return {\n    get cells() {\n      return cells;\n    },\n    step() {\n      cells = cells.map((x) => {\n        const cell = { ...x };\n        currentCell = x;\n        behaviors.forEach((b) => b(cell, world));\n        return cell;\n      });\n    },\n    render() {\n      context.strokeStyle = 'blue';\n      context.fillStyle = 'blue';\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      cells.forEach(renderCellToContext);\n    },\n  };\n\n  function look(target: Cell, radius: number): Cell[] {\n    return cells.filter(\n      (x) => x !== target && cellDistance(target, x) < radius,\n    );\n  }\n}\n\nexport default lulas;\n","import { World } from './../lulas';\nimport { Cell } from '../cell';\n\nexport function bounceOnCorners(cell: Cell, { size }: World) {\n  if (cell.position.x - cell.radius < 0) {\n    cell.position.x = cell.radius;\n    cell.velocity.x = Math.abs(cell.velocity.x);\n  }\n  if (cell.position.y - cell.radius < 0) {\n    cell.position.y = cell.radius;\n    cell.velocity.y = Math.abs(cell.velocity.y);\n  }\n\n  if (cell.position.x + cell.radius > size.x) {\n    cell.position.x = size.x - cell.radius;\n    cell.velocity.x = -Math.abs(cell.velocity.x);\n  }\n\n  if (cell.position.y + cell.radius > size.y) {\n    cell.position.y = size.y - cell.radius;\n    cell.velocity.y = -Math.abs(cell.velocity.y);\n  }\n}\n","import { World, Behavior } from './../lulas';\nimport { Cell, cellDistance } from '../cell';\nimport { sumVectors, vector, multiplyVectors, subtractVectors } from '../point';\nimport {\n  FLOCKING_ALIGMENENT_FACTOR,\n  FLOCKING_COHESION_FACTOR,\n  FLOCKING_SEPARATION_FACTOR,\n  FLOCKING_SEPARATION_VISION_LIMIT,\n} from '../CONFIGURATION';\n\nexport const flocking = requireNeighbors(flockingCore);\nexport const alignementBehavior = requireNeighbors(alignement);\nexport const cohesionBehavior = requireNeighbors(cohesion);\nexport const separationBehavior = requireNeighbors(separation);\n\nfunction flockingCore(cell: Cell, neighbors: Cell[]) {\n  if (!neighbors.length) {\n    return;\n  }\n\n  alignement(cell, neighbors);\n  cohesion(cell, neighbors);\n  separation(cell, neighbors);\n}\n\nfunction alignement(cell: Cell, neighbors: Cell[]) {\n  if (!neighbors.length) {\n    return;\n  }\n\n  const sum = neighbors.map((x) => x.velocity).reduce(sumVectors, vector(0));\n  const average = multiplyVectors(sum, 1 / neighbors.length);\n  const relative = subtractVectors(average, cell.velocity);\n  const align = multiplyVectors(relative, FLOCKING_ALIGMENENT_FACTOR);\n\n  cell.velocity.x += align.x;\n  cell.velocity.y += align.y;\n}\n\nfunction cohesion(cell: Cell, neighbors: Cell[]) {\n  if (!neighbors.length) {\n    return;\n  }\n\n  const sum = neighbors.map((x) => x.position).reduce(sumVectors, vector(0));\n  const average = multiplyVectors(sum, 1 / neighbors.length);\n  const relative = subtractVectors(average, cell.position);\n  const cohece = multiplyVectors(relative, FLOCKING_COHESION_FACTOR);\n\n  cell.velocity.x += cohece.x;\n  cell.velocity.y += cohece.y;\n}\n\nfunction separation(cell: Cell, neighbors: Cell[]) {\n  const limit = cell.vision * FLOCKING_SEPARATION_VISION_LIMIT;\n  neighbors = neighbors.filter((x) => cellDistance(cell, x) < limit);\n\n  if (!neighbors.length) {\n    return;\n  }\n\n  const sum = neighbors.map((x) => x.position).reduce(sumVectors, vector(0));\n  const average = multiplyVectors(sum, 1 / neighbors.length);\n  const relative = subtractVectors(average, cell.position);\n  const separation = multiplyVectors(relative, FLOCKING_SEPARATION_FACTOR);\n\n  cell.velocity.x -= separation.x;\n  cell.velocity.y -= separation.y;\n}\n\nfunction requireNeighbors(\n  fn: (cell: Cell, neighbors: Cell[]) => void,\n): Behavior {\n  return (cell: Cell, { look }: World) => fn(cell, look(cell.vision));\n}\n","import { Cell, cellDistance } from '../cell';\nimport { World } from '../lulas';\nimport { getSign } from '../math';\nimport { normalize, Vector, multiplyVectors } from '../point';\nimport { COLLISION_FRICTION } from '../CONFIGURATION';\n\nexport function solidBody(cell: Cell, { look }: World) {\n  const collision = look(cell.radius * 2);\n\n  for (let i = 0; i < collision.length; i++) {\n    const other = collision[i];\n    const minDistance = other.radius + cell.radius;\n    const distance = cellDistance(other, cell);\n\n    if (distance < minDistance) {\n      collide(cell, other, (minDistance - distance) / 2);\n    }\n  }\n}\n\nfunction collide(a: Cell, b: Cell, correction: number) {\n  const adjustment = normalize(\n    {\n      x: a.position.x - b.position.x,\n      y: a.position.y - b.position.y,\n    },\n    correction,\n  );\n\n  a.position.x += adjustment.x;\n  a.position.y += adjustment.y;\n  b.position.x -= adjustment.x;\n  b.position.y -= adjustment.y;\n\n  collisionBrake_bounce(a, b, adjustment);\n}\n\nfunction collisionBrake_bounce(a: Cell, b: Cell, adjustment: Vector) {\n  const factor = 1 - COLLISION_FRICTION;\n  const vel = a.velocity;\n  a.velocity = multiplyVectors(b.velocity, factor);\n  b.velocity = multiplyVectors(vel, factor);\n}\n\nfunction collisionBrake_reflect(a: Cell, b: Cell, adjustment: Vector) {\n  const signX = getSign(adjustment.x);\n  const signY = getSign(adjustment.y);\n\n  if (getSign(a.velocity.x) === -signX) {\n    a.velocity.x = -a.velocity.x * (1 - COLLISION_FRICTION);\n  }\n\n  if (getSign(a.velocity.y) === -signY) {\n    a.velocity.y = -a.velocity.y * (1 - COLLISION_FRICTION);\n  }\n\n  if (getSign(b.velocity.x) === signX) {\n    b.velocity.x = -b.velocity.x * (1 - COLLISION_FRICTION);\n  }\n\n  if (getSign(b.velocity.y) === signY) {\n    b.velocity.y = -b.velocity.y * (1 - COLLISION_FRICTION);\n  }\n}\n","import '../test/user-stories';\nimport { runTests } from '../test/index';\nimport lulas from './lulas';\nimport { createCell, logCell } from './cell';\nimport { vector } from './point';\nimport { flocking } from './behaviors/flocking';\nimport { move } from './behaviors/move';\nimport { bounceOnCorners } from './behaviors/bounceOnCorners';\nimport { solidBody } from './behaviors/solidBody';\nimport { random } from './math';\nimport { randomColor } from './color';\n\n(async () => {\n  setStyles();\n  await runTests({\n    background: 'black',\n  });\n  start();\n})();\n\nsetTimeout(() => {\n  document.body.style.backgroundColor = 'black';\n});\n\nfunction start() {\n  const canvas = document.createElement('canvas');\n  document.body.appendChild(canvas);\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n\n  const center = vector(canvas.width / 2, canvas.height / 2);\n  const createRandomCell = (i: number) =>\n    createCell({\n      position: { ...center },\n      velocity: vector(random(10), random(10)),\n      radius: random(5, 20),\n      color: randomColor(),\n    });\n\n  const game = lulas({\n    canvas,\n    cells: array(50, createRandomCell),\n    behaviors: [flocking, move, solidBody, bounceOnCorners],\n  });\n\n  console.log('Initial state');\n  logState();\n\n  game.render();\n  requestAnimationFrame(function frame() {\n    game.step();\n    game.render();\n    requestAnimationFrame(frame);\n  });\n\n  function logState() {\n    console.log(game.cells.map(logCell).join('\\n'));\n  }\n}\n\nfunction array<T>(size: number, operator: (pos: number) => T): T[] {\n  return Array(size)\n    .fill(null)\n    .map((_, i) => i + 1)\n    .map(operator);\n}\n\nfunction setStyles() {\n  const fullscreen = {\n    margin: 0,\n    padding: 0,\n    height: '100%',\n  };\n\n  for (const el of [document.documentElement, document.body]) {\n    Object.assign(el.style, fullscreen);\n  }\n}\n","requireAll((require as any).context('../user-stories/', true, /\\.ts$/));\n\nfunction requireAll(r: any) {\n  r.keys().forEach(r);\n}\n","var map = {\n\t\"./0 - As a developer I want to run tests.test.ts\": 17,\n\t\"./1 - As a user I want to see cells.test.ts\": 18,\n\t\"./2 - As a user I want to watch them move.test.ts\": 24,\n\t\"./3 - As a user I want them to bounce on the corners.test.ts\": 25,\n\t\"./4 - As a user I want to watch them follow flocking behaviour.test.ts\": 26,\n\t\"./5 - As a user I want to watch the cell not overlap.test.ts\": 28\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 16;","import { isJestTesting, test, setFilename } from '../test/index';\n\nlet isTestRunning = false;\n\nsetFilename(__dirname, __filename);\n\ntest('Should render something', () => {\n  isTestRunning = true;\n\n  if (!isJestTesting) {\n    console.log('Tests running...');\n  }\n});\n\nsetTimeout(testTester, 0);\n\nfunction testTester() {\n  if (!isTestRunning) {\n    document.body.style.backgroundColor = 'yellow';\n    throw new Error('Test suite not runnig');\n  }\n}\n","import * as assert from 'assert';\n\nimport { CanvasRenderingContext2DEvent } from '../node_modules/jest-canvas-mock/types/index.d';\nimport { createCell } from '../src/cell';\nimport { isJestTesting, setFilename, test } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\n\nsetFilename(__dirname, __filename);\n\ntest('Should render something', () => {\n  const canvas = document.createElement('canvas');\n  const lulas = createTestLulas({ canvas });\n  const isCanvasBlank = isJestTesting\n    ? isCanvasBlank_mock\n    : isCanvasBlank_browser;\n\n  lulas.render();\n  assert(!isCanvasBlank(canvas));\n});\n\ntest('Cells should be instanciable', () => {\n  const cell = createCell();\n  assert(cell);\n});\n\nfunction isCanvasBlank_browser(canvas: HTMLCanvasElement) {\n  return !canvas\n    .getContext('2d')!\n    .getImageData(0, 0, canvas.width, canvas.height)\n    .data.some((channel) => channel !== 0);\n}\n\nfunction isCanvasBlank_mock(canvas: HTMLCanvasElement) {\n  const context = canvas.getContext('2d')!;\n  return (context as any).__getEvents().every(\n    (x: CanvasRenderingContext2DEvent) =>\n      x.type === 'fillStyle' ||\n      x.type === 'strokeStyle' ||\n      // ((console.log(x.type, /^(fill|stroke)/.test(x.type)) as any) || true) ||\n      !/^(fill|stroke)/.test(x.type),\n  );\n}\n","import { equal as assertEqual } from 'assert';\n\nimport { createCell } from '../src/cell';\nimport { test, setFilename } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\nimport { vector, vectorAxis } from '../src/point';\nimport { move } from '../src/behaviors/move';\n\nsetFilename(__dirname, __filename);\n\ntest(\n  'I should be able to create a cell with predefined parameters',\n  [[vector(0)], [vector(1)], [vector(2)]],\n  (pos) => {\n    const cell = createCell({\n      position: { ...pos },\n    });\n\n    vectorAxis((axis) => assertEqual(cell.position[axis], pos[axis], axis));\n  },\n);\n\ntest(\n  'The game will execute a cell step',\n  [\n    [vector(0), vector(1), vector(1)],\n    [vector(0), vector(2), vector(2)],\n    [vector(4), vector(1), vector(5)],\n    [vector(4), vector(2), vector(6)],\n  ],\n  (pos, vel, exp) => {\n    const cell = createCell({\n      position: { ...pos },\n      velocity: { ...vel },\n    });\n    const sut = createTestLulas({\n      cells: [cell],\n      behaviors: [move],\n    });\n\n    sut.step();\n\n    vectorAxis((axis) => assertEqual(cell.position[axis], exp[axis]));\n  },\n);\n","import { equal } from 'assert';\n\nimport { createCell } from '../src/cell';\nimport { test, setFilename } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\nimport { vectorAxis, vector } from '../src/point';\nimport { bounceOnCorners } from '../src/behaviors/bounceOnCorners';\n\nsetFilename(__dirname, __filename);\n\ntest('A cell in (0,0) will have position adjusted to fit the screen', () => {\n  const cell = createCell({ radius: 5 });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n  });\n\n  sut.step();\n\n  vectorAxis((axis) => equal(cell.position[axis], 5, axis));\n});\n\ntest('A cell in (0,0) will have velocity adjusted to bounce on screen', () => {\n  const cell = createCell({ velocity: vector(-1) });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n  });\n\n  sut.step();\n\n  vectorAxis((axis) => equal(cell.velocity[axis], 1, axis));\n});\n\ntest('A cell outside of the window will have position adjusted to fit the screen', () => {\n  const size = 200;\n  const cell = createCell({ position: vector(size), radius: 5 });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n    worldSize: vector(size),\n  });\n\n  sut.step();\n\n  vectorAxis((axis) => equal(cell.position[axis], 195, axis));\n});\n\ntest('A cell outside of the window will have velocity adjusted to bounce on screen', () => {\n  const size = 200;\n  const cell = createCell({\n    position: vector(size),\n    velocity: vector(1),\n  });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n    worldSize: vector(size),\n  });\n\n  sut.step();\n\n  vectorAxis((axis) => equal(cell.velocity[axis], -1, axis));\n});\n","import {\n  alignementBehavior,\n  cohesionBehavior,\n  separationBehavior,\n} from './../src/behaviors/flocking';\n\nimport { notEqual, ok } from 'assert';\n\nimport { createCell } from '../src/cell';\nimport { vector, vectorAxis, Vector, getAngle, sumVectors } from '../src/point';\nimport { test, setFilename } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\nimport { assertBetween, assertBetweenOrEqual } from '../test/assertions';\nimport { equal } from 'assert';\nimport { move } from '../src/behaviors/move';\n\n// GLOSSARY: Boid = Cell\n\nsetFilename(__dirname, __filename);\n\ntest('Each boid velocity should be independent', () => {\n  const lulas = createTestLulas({\n    behaviors: [move],\n    cells: [\n      createCell({ position: vector(10), velocity: vector(-1, -1) }),\n      createCell({ position: vector(20), velocity: vector(1) }),\n    ],\n  });\n\n  lulas.step();\n  const [first, second] = lulas.cells;\n\n  vectorAxis((axis) => equal(first.velocity[axis], -1));\n  vectorAxis((axis) => equal(second.velocity[axis], 1));\n});\n\ntest(\n  \"A boid should align to it's neighbors\",\n  [\n    [vector(0), vector(0, 1)],\n    // With vector(0) angle would be the same before and after (0)\n    [vector(1), vector(1, 0)],\n    [vector(0), vector(1)],\n    [vector(0), vector(-1, 0)],\n    [vector(0), vector(0, -1)],\n    [vector(0), vector(-1, -1)],\n  ],\n  (targetVel, neighborVel) => {\n    const lulas = createTestLulas({\n      behaviors: [alignementBehavior],\n      cells: [\n        createCell({ position: vector(10), velocity: { ...targetVel } }),\n        createCell({ position: vector(20), velocity: { ...neighborVel } }),\n      ],\n    });\n\n    const angleBefore = getAngle(targetVel);\n    const neighborAngle = getAngle(neighborVel);\n\n    lulas.step();\n    const sut = lulas.cells[0];\n\n    const angleAfter = getAngle(sut.velocity);\n    notEqual(angleAfter, angleBefore);\n    assertBetweenOrEqual(angleAfter, angleBefore, neighborAngle);\n  },\n);\n\ntest(\n  'A boid should get closer to nearby neighbors',\n  [\n    [vector(10)],\n    [vector(-10)],\n    [vector(15, -15)],\n    [vector(-15, 15)],\n    // out of range\n    // [vector(50), vector(0)],\n  ],\n  (pos) => {\n    const lulas = createTestLulas({\n      behaviors: [cohesionBehavior],\n      cells: [\n        createCell({ position: vector(0), velocity: vector(0), vision: 50 }),\n        createCell({ position: { ...pos }, velocity: vector(0) }),\n      ],\n    });\n\n    lulas.step();\n\n    const sut = lulas.cells[0];\n    const angleBefore = 0;\n    const angleAfter = getAngle(sut.velocity);\n\n    notEqual(angleAfter, angleBefore);\n    assertBetweenOrEqual(angleAfter, angleBefore, getAngle(pos));\n  },\n);\n\ntest(\n  'A boid should maintain distance from closer neighbors',\n  [\n    [vector(10)],\n    [vector(10, 5)],\n    [vector(-10)],\n    [vector(-5, -10)],\n    // out of range\n    // [vector(49), vector(0)],\n  ],\n  (pos) => {\n    // This checks if the cell position affects the direction\n    const cellPosition = vector(-100, 100);\n\n    const lulas = createTestLulas({\n      behaviors: [separationBehavior],\n      cells: [\n        createCell({ position: cellPosition, velocity: vector(0), vision: 50 }),\n        createCell({\n          position: sumVectors(cellPosition, pos),\n          velocity: vector(0),\n        }),\n      ],\n    });\n\n    lulas.step();\n\n    const sut = lulas.cells[0];\n    const angleBefore = 0;\n    const angleAfter = getAngle(sut.velocity);\n    let separationAngle = getAngle(pos) + 180;\n\n    if (separationAngle > 180) {\n      separationAngle -= 360;\n    }\n\n    notEqual(angleAfter, angleBefore);\n    assertBetweenOrEqual(angleAfter, angleBefore, separationAngle);\n  },\n);\n","import * as assert from 'assert';\n\nexport function assertBetween(\n  value: number,\n  first: number,\n  second: number,\n  message = '',\n) {\n  const min = Math.min(first, second);\n  const max = Math.max(first, second);\n  const finalMessage = `Expected ${value} to be between ${min} and ${max} (${message})`;\n\n  if (min === max) {\n    assert(value === min, finalMessage);\n    return;\n  }\n\n  assert(value > min, finalMessage);\n  assert(value < max, finalMessage);\n}\n\nexport function assertBetweenOrEqual(\n  value: number,\n  first: number,\n  second: number,\n  message = '',\n) {\n  const min = Math.min(first, second);\n  const max = Math.max(first, second);\n  const finalMessage = `Expected ${value} to be between ${min} and ${max} (${message})`;\n\n  if (min === max) {\n    assert(value === min, finalMessage);\n    return;\n  }\n\n  assert(value >= min, finalMessage);\n  assert(value <= max, finalMessage);\n}\n","import * as assert from 'assert';\n\nimport { solidBody } from '../src/behaviors/solidBody';\nimport { createCell } from '../src/cell';\nimport { vector, vectorAxis } from '../src/point';\nimport { setFilename, test } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\n\nsetFilename(__dirname, __filename);\n\ntest(\n  'Cells should immediately separate each other if they overlap',\n  [\n    [vector(1, 0), vector(-1, 0), vector(5, 0)],\n    [vector(0, 1), vector(0, -1), vector(0, 5)],\n    [vector(1), vector(-1), vector(3.5355339059327378)],\n  ],\n  (pos1, pos2, expected) => {\n    const lulas = createTestLulas({\n      behaviors: [solidBody],\n      cells: [\n        createCell({ position: { ...pos1 }, velocity: vector(0) }),\n        createCell({ position: { ...pos2 }, velocity: vector(0) }),\n      ],\n    });\n\n    lulas.step();\n    const sut = lulas.cells[0];\n\n    vectorAxis((axis) => assert.equal(sut.position[axis], expected[axis]));\n  },\n);\n\ntest('Cells should stop if they collide on each other', () => {\n  const lulas = createTestLulas({\n    behaviors: [solidBody],\n    cells: [\n      createCell({ position: vector(1), velocity: vector(-1) }),\n      createCell({ position: vector(-1), velocity: vector(0) }),\n    ],\n  });\n\n  lulas.step();\n  const sut = lulas.cells[0];\n\n  vectorAxis((axis) => assert(sut.velocity[axis] >= 0));\n});\n"],"sourceRoot":""}