{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/cell.ts","webpack:///./src/point.ts","webpack:///./test/index.ts","webpack:///./test/test-duplicates.ts","webpack:///./src/behaviors/move.ts","webpack:///./src/lulas.ts","webpack:///./src/behaviors/bounceOnCorners.ts","webpack:///./src/behaviors/flocking.ts","webpack:///./src/CONFIGURATION.ts","webpack:///./src/behaviors/solidBody.ts","webpack:///./src/index.ts","webpack:///./test/user-stories.ts","webpack:///./user-stories sync \\.ts$","webpack:///./user-stories/0 - As a developer I want to run tests.test.ts","webpack:///./user-stories/1 - As a user I want to see cells.test.ts","webpack:///./user-stories/2 - As a user I want to watch them move.test.ts","webpack:///./user-stories/3 - As a user I want them to bounce on the corners.test.ts","webpack:///./user-stories/4 - As a user I want to watch them follow flocking behaviour.test.ts","webpack:///./test/assertions.ts","webpack:///./user-stories/5 - As a user I want to watch the cell not overlap.test.ts","webpack:///./src/math.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","point_1","lastId","createCell","partial","__assign","id","color","position","point","velocity","radius","vision","cellDistance","left","right","pointMagnitude","subtractPoints","renderCell","context","cell","beginPath","arc","x","y","Math","PI","strokeStyle","stroke","logCell","logPoint","isPointZero","_a","sqrt","pow","pointAxis","operate","normalizePoint","targetMagnitude","magnitude","axis","sumPoints","multiplyPoint","tests","documentTitle","document","title","file","executeTest","message","table","run","isJestTesting","console","groupCollapsed","runTest","groupEnd","global","test","log","error","write","stack","replace","printError","setFailState","body","style","backgroundColor","Boolean","first","second","Array","isArray","unit","runTests","background","lastFile","_i","tests_1","setSuccessState","setFilename","dirname","filename","lulas_1","cell_1","createTestLulas","config","default","canvas","createElement","cells","worldSize","behaviors","move","lulas","_b","width","height","getContext","renderCellToContext","currentCell","world","size","look","target","filter","step","map","forEach","b","render","fillStyle","clearRect","bounceOnCorners","abs","CONFIGURATION_1","alignement","neighbors","sum","reduce","average","relative","align","FLOCKING_ALIGMENENT_FACTOR","cohesion","cohece","FLOCKING_COHESION_FACTOR","separation","limit","FLOCKING_SEPARATION_LIMIT","FLOCKING_SEPARATION_FACTOR","requireNeighbors","fn","flocking","alignementBehavior","cohesionBehavior","separationBehavior","COLLISION_FRICTION","collide","a","correction","adjustment","factor","vel","collisionBrake_bounce","solidBody","collision","other","minDistance","distance","index_1","flocking_1","move_1","bounceOnCorners_1","solidBody_1","random","min","max","round","__awaiter","fullscreen","margin","padding","documentElement","el","assign","setStyles","sent","appendChild","innerWidth","innerHeight","center","game","operator","fill","_","array","join","requestAnimationFrame","frame","start","keys","./0 - As a developer I want to run tests.test.ts","./1 - As a user I want to see cells.test.ts","./2 - As a user I want to watch them move.test.ts","./3 - As a user I want them to bounce on the corners.test.ts","./4 - As a user I want to watch them follow flocking behaviour.test.ts","./5 - As a user I want to watch the cell not overlap.test.ts","webpackContext","req","webpackContextResolve","e","Error","code","resolve","isTestRunning","__dirname","__filename","setTimeout","assert","test_duplicates_1","isCanvasBlank_browser","getImageData","some","channel","isCanvasBlank_mock","__getEvents","every","type","isCanvasBlank","assert_1","pos","equal","exp","assertions_1","targetVel","neighborVel","sut","assertBetween","expected","finalMessage","pos1","pos2","getSign"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([12,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\n  Point,\n  point,\n  logPoint,\n  pointMagnitude,\n  subtractPoints,\n} from './point';\n\nexport type CellId = '[number CellId]';\nlet lastId = 0;\n\nfunction getNextId() {\n  return (lastId++ as any) as CellId;\n}\n\nexport interface Cell {\n  id: CellId;\n  color: string;\n  position: Point;\n  velocity: Point;\n  radius: number;\n  vision: number;\n}\n\nexport function createCell(partial?: Partial<Cell>): Cell {\n  const defaultRadius = 5;\n\n  return {\n    id: getNextId(),\n    color: 'white',\n    position: point(0),\n    velocity: point(0),\n    radius: defaultRadius,\n    vision: (partial && partial.radius ? partial.radius : defaultRadius) * 10,\n    ...partial,\n  };\n}\n\nexport function cellDistance(left: Cell, right: Cell) {\n  return pointMagnitude(subtractPoints(left.position, right.position));\n}\n\nexport function renderCell(context: CanvasRenderingContext2D, cell: Cell) {\n  context.beginPath();\n  context.arc(cell.position.x, cell.position.y, cell.radius, 0, Math.PI * 2);\n  context.strokeStyle = cell.color;\n  context.stroke();\n\n  // context.beginPath();\n  // context.arc(cell.position.x, cell.position.y, cell.vision, 0, Math.PI * 2);\n  // context.strokeStyle = 'red';\n  // context.stroke();\n}\n\nexport function logCell(cell: Cell) {\n  return `Cell(${cell.id}) ${cell.radius} { pos: ${logPoint(\n    cell.position,\n  )}, vel: ${logPoint(cell.velocity)} }`;\n}\n","export interface Point {\n  x: number;\n  y: number;\n}\n\nexport function point(x: number, y = x): Point {\n  return { x, y };\n}\n\nexport function isPointZero({ x, y }: Point) {\n  return x === 0 && y === 0;\n}\n\nexport function pointMagnitude({ x, y }: Point) {\n  return Math.sqrt(x ** 2 + y ** 2);\n}\n\nexport function normalizePoint(point: Point, targetMagnitude = 1) {\n  if (isPointZero(point)) {\n    return { ...point };\n  }\n\n  const magnitude = pointMagnitude(point);\n  return pointAxis((axis) => (point[axis] * targetMagnitude) / magnitude);\n}\n\nexport function sumPoints(left: Point, right: Point): Point {\n  return pointAxis((axis) => left[axis] + right[axis]);\n}\n\nexport function subtractPoints(left: Point, right: Point) {\n  return pointAxis((axis) => left[axis] - right[axis]);\n}\n\nexport function multiplyPoint(point: Point, value: number) {\n  return pointAxis((axis) => point[axis] * value);\n}\n\nexport function pointAxis(operate: (key: 'x' | 'y') => number): Point;\nexport function pointAxis(operate: (key: 'x' | 'y') => void): void;\nexport function pointAxis(\n  operate: (key: 'x' | 'y') => number | void,\n): Point | void {\n  const x = operate('x');\n  const y = operate('y');\n\n  if (typeof x === 'number' && typeof y === 'number') {\n    return { x, y };\n  }\n}\n\nexport function logPoint(point: Point) {\n  return `(${point.x},${point.y})`;\n}\n","type TestRun<T extends any[]> = (...args: T) => Promise<any> | void;\n\ninterface UnitTest_Basic {\n  file: string;\n  message: string;\n  table: null;\n  run: TestRun<[]>;\n}\n\ninterface UnitTest_Table<T extends any[] = []> {\n  file: string;\n  message: string;\n  table: T[];\n  run: TestRun<T>;\n}\n\ntype UnitTest<T extends any[]> = UnitTest_Basic | UnitTest_Table<T>;\n\n// -----\n\nconst tests: UnitTest<any>[] = [];\nconst documentTitle = document.title;\nlet file = '';\n\nexport const isJestTesting = Boolean(\n  typeof global !== 'undefined' && (global as any).test,\n);\n\nexport function test(message: string, run: TestRun<[]>): void;\nexport function test<T extends any[]>(\n  message: string,\n  table: T[],\n  run: TestRun<T>,\n): void;\n\nexport function test<T extends any[]>(\n  message: string,\n  first: TestRun<[]> | T[],\n  second?: TestRun<T>,\n): void {\n  const table = Array.isArray(first) ? first : null;\n  const run = table ? second : (first as TestRun<T>);\n  const unit = { file, message, table, run } as UnitTest<T>;\n\n  if (isJestTesting) {\n    executeTest(unit);\n  } else {\n    tests.push(unit);\n  }\n}\n\nexport function runTests({ background }: { background?: string } = {}) {\n  setInitialState();\n  let lastFile = '';\n\n  for (const unit of tests) {\n    if (!isJestTesting && unit.file !== lastFile) {\n      console.groupEnd();\n      lastFile = unit.file;\n      console.groupCollapsed(unit.file);\n    }\n\n    executeTest(unit);\n  }\n\n  if (!isJestTesting) {\n    console.groupEnd();\n  }\n\n  tests.length = 0;\n  document.title = documentTitle;\n  setSuccessState(background);\n}\n\nexport function setFilename(dirname: string, filename: string) {\n  file = filename.replace(`${dirname}/`, '').replace(/(\\.test)?\\.ts$/, '');\n}\n\nfunction executeTest<T extends any[]>({\n  file,\n  message,\n  table,\n  run,\n}: UnitTest<T>) {\n  if (!table) {\n    runTest(file, message, run as TestRun<[]>);\n    return;\n  }\n\n  if (!isJestTesting) {\n    console.groupCollapsed(message);\n  }\n\n  for (let i = 0; i < table.length; i++) {\n    runTest(file, `${message} [${i}]`, () => run(...table[i]));\n  }\n\n  if (!isJestTesting) {\n    console.groupEnd();\n  }\n}\n\nfunction runTest(file: string, message: string, run: TestRun<[]>) {\n  if (isJestTesting) {\n    (global as any).test(message, run);\n    return;\n  }\n\n  try {\n    run();\n    console.log(`${message} 🟢`);\n  } catch (error) {\n    printError(file, error, message);\n    setFailState();\n    throw error;\n  }\n}\n\nfunction printError(file: string, error: Error, message: string) {\n  console.log(`${message} 🔴`);\n  console.error(error);\n  document.write(`\n    <div style=\"display: flex; align-items:center; justify-content: center; height: 100%\">\n    <span>\n      <h1>${file}</h1>\n      <h2>${message}</h2>\n      <pre>${error.stack?.replace('\\n', '<br>')}}</pre>\n    </span>\n    </div>\n  `);\n}\n\n// -----\n\nfunction setInitialState() {\n  setFailState();\n}\n\nfunction setFailState() {\n  document.body.style.backgroundColor = '#440000';\n}\n\nfunction setSuccessState(background = 'green') {\n  document.body.style.backgroundColor = background;\n}\n","import lulas, { LulasConfig } from '../src/lulas';\nimport { createCell } from '../src/cell';\n\nexport function createTestLulas(config: Partial<LulasConfig> = {}) {\n  return lulas({\n    canvas: document.createElement('canvas'),\n    cells: [createCell()],\n    worldSize: { x: 1000, y: 1000 },\n    behaviors: [],\n    ...config,\n  });\n}\n","import { Cell } from '../cell';\n\nexport function move(cell: Cell) {\n  cell.position.x += cell.velocity.x;\n  cell.position.y += cell.velocity.y;\n}\n","import { Point } from './point';\nimport { Cell, cellDistance, renderCell } from './cell';\n\nexport interface World {\n  size: Point;\n  look: (radius: number) => Cell[];\n}\n\nexport type Behavior = (cell: Cell, world: World) => void;\n\nexport interface LulasConfig {\n  canvas: HTMLCanvasElement;\n  cells: Cell[];\n  behaviors: Behavior[];\n  worldSize?: Point;\n}\n\nexport function lulas({\n  canvas,\n  cells,\n  behaviors,\n  worldSize = { x: canvas.width, y: canvas.height },\n}: LulasConfig) {\n  const context = canvas.getContext('2d')!;\n  const renderCellToContext = renderCell.bind(null, context);\n\n  let currentCell: Cell | null = null;\n  const world = {\n    size: worldSize,\n    look(radius: number) {\n      return look(currentCell!, radius);\n    },\n  };\n\n  return {\n    get cells() {\n      return cells;\n    },\n    step() {\n      cells = cells.map((x) => {\n        const cell = { ...x };\n        currentCell = x;\n        behaviors.forEach((b) => b(cell, world));\n        return cell;\n      });\n    },\n    render() {\n      context.strokeStyle = 'blue';\n      context.fillStyle = 'blue';\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      cells.forEach(renderCellToContext);\n    },\n  };\n\n  function look(target: Cell, radius: number): Cell[] {\n    return cells.filter(\n      (x) => x !== target && cellDistance(target, x) < radius,\n    );\n  }\n}\n\nexport default lulas;\n","import { World } from './../lulas';\nimport { Cell } from '../cell';\n\nexport function bounceOnCorners(cell: Cell, { size }: World) {\n  if (cell.position.x - cell.radius < 0) {\n    cell.position.x = cell.radius;\n    cell.velocity.x = Math.abs(cell.velocity.x);\n  }\n  if (cell.position.y - cell.radius < 0) {\n    cell.position.y = cell.radius;\n    cell.velocity.y = Math.abs(cell.velocity.y);\n  }\n\n  if (cell.position.x + cell.radius > size.x) {\n    cell.position.x = size.x - cell.radius;\n    cell.velocity.x = -Math.abs(cell.velocity.x);\n  }\n\n  if (cell.position.y + cell.radius > size.y) {\n    cell.position.y = size.y - cell.radius;\n    cell.velocity.y = -Math.abs(cell.velocity.y);\n  }\n}\n","import { World, Behavior } from './../lulas';\nimport { Cell, cellDistance } from '../cell';\nimport { sumPoints, point, multiplyPoint, subtractPoints } from '../point';\nimport {\n  FLOCKING_ALIGMENENT_FACTOR,\n  FLOCKING_COHESION_FACTOR,\n  FLOCKING_SEPARATION_FACTOR,\n  FLOCKING_SEPARATION_LIMIT,\n} from '../CONFIGURATION';\n\nexport const flocking = requireNeighbors(flockingCore);\nexport const alignementBehavior = requireNeighbors(alignement);\nexport const cohesionBehavior = requireNeighbors(cohesion);\nexport const separationBehavior = requireNeighbors(separation);\n\nfunction flockingCore(cell: Cell, neighbors: Cell[]) {\n  if (!neighbors.length) {\n    return;\n  }\n\n  alignement(cell, neighbors);\n  cohesion(cell, neighbors);\n  separation(cell, neighbors);\n}\n\nfunction alignement(cell: Cell, neighbors: Cell[]) {\n  if (!neighbors.length) {\n    return;\n  }\n\n  const sum = neighbors.map((x) => x.velocity).reduce(sumPoints, point(0));\n  const average = multiplyPoint(sum, 1 / neighbors.length);\n  const relative = subtractPoints(average, cell.velocity);\n  const align = multiplyPoint(relative, FLOCKING_ALIGMENENT_FACTOR);\n\n  cell.velocity.x += align.x;\n  cell.velocity.y += align.y;\n}\n\nfunction cohesion(cell: Cell, neighbors: Cell[]) {\n  if (!neighbors.length) {\n    return;\n  }\n\n  const sum = neighbors.map((x) => x.position).reduce(sumPoints, point(0));\n  const average = multiplyPoint(sum, 1 / neighbors.length);\n  const relative = subtractPoints(average, cell.position);\n  const cohece = multiplyPoint(relative, FLOCKING_COHESION_FACTOR);\n\n  cell.velocity.x += cohece.x;\n  cell.velocity.y += cohece.y;\n}\n\nfunction separation(cell: Cell, neighbors: Cell[]) {\n  const limit = cell.vision * FLOCKING_SEPARATION_LIMIT;\n  neighbors = neighbors.filter((x) => cellDistance(cell, x) < limit);\n\n  if (!neighbors.length) {\n    return;\n  }\n\n  const sum = neighbors.map((x) => x.position).reduce(sumPoints, point(0));\n  const average = multiplyPoint(sum, 1 / neighbors.length);\n  const relative = subtractPoints(average, cell.position);\n  const separation = multiplyPoint(relative, FLOCKING_SEPARATION_FACTOR);\n\n  cell.velocity.x -= separation.x;\n  cell.velocity.y -= separation.y;\n}\n\nfunction requireNeighbors(\n  fn: (cell: Cell, neighbors: Cell[]) => void,\n): Behavior {\n  return (cell: Cell, { look }: World) => fn(cell, look(cell.vision));\n}\n","// Friction when two cells collide\nexport const COLLISION_FRICTION = 0.0;\n\nexport const FLOCKING_ALIGMENENT_FACTOR = 0.05;\nexport const FLOCKING_COHESION_FACTOR = 0.001;\nexport const FLOCKING_SEPARATION_FACTOR = 0.005;\n\n// Fraction of vision\nexport const FLOCKING_SEPARATION_LIMIT = 0.4;\n","import { Cell, cellDistance } from '../cell';\nimport { World } from '../lulas';\nimport { getSign } from '../math';\nimport { normalizePoint, Point, multiplyPoint } from '../point';\nimport { COLLISION_FRICTION } from '../CONFIGURATION';\n\nexport function solidBody(cell: Cell, { look }: World) {\n  const collision = look(cell.radius * 2);\n\n  for (let i = 0; i < collision.length; i++) {\n    const other = collision[i];\n    const minDistance = other.radius + cell.radius;\n    const distance = cellDistance(other, cell);\n\n    if (distance < minDistance) {\n      collide(cell, other, (minDistance - distance) / 2);\n    }\n  }\n}\n\nfunction collide(a: Cell, b: Cell, correction: number) {\n  const adjustment = normalizePoint(\n    {\n      x: a.position.x - b.position.x,\n      y: a.position.y - b.position.y,\n    },\n    correction,\n  );\n\n  a.position.x += adjustment.x;\n  a.position.y += adjustment.y;\n  b.position.x -= adjustment.x;\n  b.position.y -= adjustment.y;\n\n  collisionBrake_bounce(a, b, adjustment);\n}\n\nfunction collisionBrake_bounce(a: Cell, b: Cell, adjustment: Point) {\n  const factor = 1 - COLLISION_FRICTION;\n  const vel = a.velocity;\n  a.velocity = multiplyPoint(b.velocity, factor);\n  b.velocity = multiplyPoint(vel, factor);\n}\n\nfunction collisionBrake_reflect(a: Cell, b: Cell, adjustment: Point) {\n  const signX = getSign(adjustment.x);\n  const signY = getSign(adjustment.y);\n\n  if (getSign(a.velocity.x) === -signX) {\n    a.velocity.x = -a.velocity.x * (1 - COLLISION_FRICTION);\n  }\n\n  if (getSign(a.velocity.y) === -signY) {\n    a.velocity.y = -a.velocity.y * (1 - COLLISION_FRICTION);\n  }\n\n  if (getSign(b.velocity.x) === signX) {\n    b.velocity.x = -b.velocity.x * (1 - COLLISION_FRICTION);\n  }\n\n  if (getSign(b.velocity.y) === signY) {\n    b.velocity.y = -b.velocity.y * (1 - COLLISION_FRICTION);\n  }\n}\n","import '../test/user-stories';\nimport { runTests } from '../test/index';\nimport lulas from './lulas';\nimport { createCell, logCell } from './cell';\nimport { point } from './point';\nimport { flocking } from './behaviors/flocking';\nimport { move } from './behaviors/move';\nimport { bounceOnCorners } from './behaviors/bounceOnCorners';\nimport { solidBody } from './behaviors/solidBody';\n\n(async () => {\n  setStyles();\n  await runTests({\n    background: 'black',\n  });\n  start();\n})();\n\nfunction start() {\n  const canvas = document.createElement('canvas');\n  document.body.appendChild(canvas);\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n\n  const center = point(canvas.width / 2, canvas.height / 2);\n  const createRandomCell = (i: number) =>\n    createCell({\n      position: { ...center },\n      velocity: point(random(10), random(10)),\n      radius: random(5, 20),\n    });\n\n  const game = lulas({\n    canvas,\n    cells: array(50, createRandomCell),\n    behaviors: [flocking, move, solidBody, bounceOnCorners],\n  });\n\n  console.log('Initial state');\n  logState();\n\n  game.render();\n  requestAnimationFrame(function frame() {\n    game.step();\n    game.render();\n    requestAnimationFrame(frame);\n  });\n\n  function logState() {\n    console.log(game.cells.map(logCell).join('\\n'));\n  }\n}\n\nfunction random(first: number, second = -first) {\n  const min = Math.min(first, second);\n  const max = Math.max(first, second);\n  return Math.round(Math.random() * (max - min) + min);\n}\n\nfunction array<T>(size: number, operator: (pos: number) => T): T[] {\n  return Array(size)\n    .fill(null)\n    .map((_, i) => i + 1)\n    .map(operator);\n}\n\nfunction setStyles() {\n  const fullscreen = {\n    margin: 0,\n    padding: 0,\n    height: '100%',\n  };\n\n  for (const el of [document.documentElement, document.body]) {\n    Object.assign(el.style, fullscreen);\n  }\n}\n","requireAll((require as any).context('../user-stories/', true, /\\.ts$/));\n\nfunction requireAll(r: any) {\n  r.keys().forEach(r);\n}\n","var map = {\n\t\"./0 - As a developer I want to run tests.test.ts\": 15,\n\t\"./1 - As a user I want to see cells.test.ts\": 16,\n\t\"./2 - As a user I want to watch them move.test.ts\": 22,\n\t\"./3 - As a user I want them to bounce on the corners.test.ts\": 23,\n\t\"./4 - As a user I want to watch them follow flocking behaviour.test.ts\": 24,\n\t\"./5 - As a user I want to watch the cell not overlap.test.ts\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","import { isJestTesting, test, setFilename } from '../test/index';\n\nlet isTestRunning = false;\n\nsetFilename(__dirname, __filename);\n\ntest('Should render something', () => {\n  isTestRunning = true;\n\n  if (!isJestTesting) {\n    console.log('Tests running...');\n  }\n});\n\nsetTimeout(testTester, 0);\n\nfunction testTester() {\n  if (!isTestRunning) {\n    document.body.style.backgroundColor = 'yellow';\n    throw new Error('Test suite not runnig');\n  }\n}\n","import * as assert from 'assert';\n\nimport { CanvasRenderingContext2DEvent } from '../node_modules/jest-canvas-mock/types/index.d';\nimport { createCell } from '../src/cell';\nimport { isJestTesting, setFilename, test } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\n\nsetFilename(__dirname, __filename);\n\ntest('Should render something', () => {\n  const canvas = document.createElement('canvas');\n  const lulas = createTestLulas({ canvas });\n  const isCanvasBlank = isJestTesting\n    ? isCanvasBlank_mock\n    : isCanvasBlank_browser;\n\n  lulas.render();\n  assert(!isCanvasBlank(canvas));\n});\n\ntest('Cells should be instanciable', () => {\n  const cell = createCell();\n  assert(cell);\n});\n\nfunction isCanvasBlank_browser(canvas: HTMLCanvasElement) {\n  return !canvas\n    .getContext('2d')!\n    .getImageData(0, 0, canvas.width, canvas.height)\n    .data.some((channel) => channel !== 0);\n}\n\nfunction isCanvasBlank_mock(canvas: HTMLCanvasElement) {\n  const context = canvas.getContext('2d')!;\n  return (context as any).__getEvents().every(\n    (x: CanvasRenderingContext2DEvent) =>\n      x.type === 'fillStyle' ||\n      x.type === 'strokeStyle' ||\n      // ((console.log(x.type, /^(fill|stroke)/.test(x.type)) as any) || true) ||\n      !/^(fill|stroke)/.test(x.type),\n  );\n}\n","import { equal as assertEqual } from 'assert';\n\nimport { createCell } from '../src/cell';\nimport { test, setFilename } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\nimport { point, pointAxis } from '../src/point';\nimport { move } from '../src/behaviors/move';\n\nsetFilename(__dirname, __filename);\n\ntest(\n  'I should be able to create a cell with predefined parameters',\n  [[point(0)], [point(1)], [point(2)]],\n  (pos) => {\n    const cell = createCell({\n      position: { ...pos },\n    });\n\n    pointAxis((axis) => assertEqual(cell.position[axis], pos[axis], axis));\n  },\n);\n\ntest(\n  'The game will execute a cell step',\n  [\n    [point(0), point(1), point(1)],\n    [point(0), point(2), point(2)],\n    [point(4), point(1), point(5)],\n    [point(4), point(2), point(6)],\n  ],\n  (pos, vel, exp) => {\n    const cell = createCell({\n      position: { x: pos.x, y: pos.y },\n      velocity: { x: vel.x, y: vel.y },\n    });\n    const sut = createTestLulas({\n      cells: [cell],\n      behaviors: [move],\n    });\n\n    sut.step();\n\n    pointAxis((axis) => assertEqual(cell.position[axis], exp[axis], axis));\n  },\n);\n","import { equal } from 'assert';\n\nimport { createCell } from '../src/cell';\nimport { test, setFilename } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\nimport { pointAxis, point } from '../src/point';\nimport { bounceOnCorners } from '../src/behaviors/bounceOnCorners';\n\nsetFilename(__dirname, __filename);\n\ntest('A cell in (0,0) will have position adjusted to fit the screen', () => {\n  const cell = createCell({ radius: 5 });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n  });\n\n  sut.step();\n\n  pointAxis((axis) => equal(cell.position[axis], 5, axis));\n});\n\ntest('A cell in (0,0) will have velocity adjusted to bounce on screen', () => {\n  const cell = createCell({ velocity: point(-1) });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n  });\n\n  sut.step();\n\n  pointAxis((axis) => equal(cell.velocity[axis], 1, axis));\n});\n\ntest('A cell outside of the window will have position adjusted to fit the screen', () => {\n  const size = 200;\n  const cell = createCell({ position: point(size), radius: 5 });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n    worldSize: point(size),\n  });\n\n  sut.step();\n\n  pointAxis((axis) => equal(cell.position[axis], 195, axis));\n});\n\ntest('A cell outside of the window will have velocity adjusted to bounce on screen', () => {\n  const size = 200;\n  const cell = createCell({\n    position: point(size),\n    velocity: point(1),\n  });\n  const sut = createTestLulas({\n    behaviors: [bounceOnCorners],\n    cells: [cell],\n    worldSize: point(size),\n  });\n\n  sut.step();\n\n  pointAxis((axis) => equal(cell.velocity[axis], -1, axis));\n});\n","import {\n  alignementBehavior,\n  cohesionBehavior,\n  separationBehavior,\n} from './../src/behaviors/flocking';\n\nimport { createCell } from '../src/cell';\nimport { point, pointAxis, Point } from '../src/point';\nimport { test, setFilename } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\nimport { assertBetween } from '../test/assertions';\nimport { equal } from 'assert';\nimport { move } from '../src/behaviors/move';\n\n// GLOSSARY: Boid = Cell\n\nsetFilename(__dirname, __filename);\n\ntest('Each boid velocity should be independent', () => {\n  const lulas = createTestLulas({\n    behaviors: [move],\n    cells: [\n      createCell({ position: point(10), velocity: point(-1, -1) }),\n      createCell({ position: point(20), velocity: point(1) }),\n    ],\n  });\n\n  lulas.step();\n  const [first, second] = lulas.cells;\n\n  pointAxis((axis) => equal(first.velocity[axis], -1));\n  pointAxis((axis) => equal(second.velocity[axis], 1));\n});\n\ntest(\n  \"A boid should align to it's neighbors\",\n  [\n    [point(0), point(0, 1)],\n    [point(1), point(1, 0)],\n    [point(2), point(1)],\n    [point(3), point(-1, 0)],\n    [point(4), point(0, -1)],\n    [point(5), point(-1, -1)],\n  ],\n  (targetVel, neighborVel) => {\n    const lulas = createTestLulas({\n      behaviors: [alignementBehavior],\n      cells: [\n        createCell({ position: point(10), velocity: { ...targetVel } }),\n        createCell({ position: point(20), velocity: { ...neighborVel } }),\n      ],\n    });\n\n    lulas.step();\n    const sut = lulas.cells[0];\n\n    pointAxis((axis) =>\n      assertBetween(\n        sut.velocity[axis],\n        targetVel[axis],\n        neighborVel[axis],\n        axis,\n      ),\n    );\n  },\n);\n\ntest(\n  'A boid should get closer to nearby neighbors',\n  [\n    [point(10), point(1)],\n    [point(-10), point(-1)],\n    [point(15, -15), point(1, -1)],\n    [point(-15, 15), point(-1, 1)],\n    // out of range\n    [point(50), point(0)],\n  ],\n  (pos, expected) => {\n    const lulas = createTestLulas({\n      behaviors: [cohesionBehavior],\n      cells: [\n        createCell({ position: point(0), velocity: point(0), vision: 50 }),\n        createCell({ position: { ...pos }, velocity: point(0) }),\n      ],\n    });\n\n    lulas.step();\n    const sut = lulas.cells[0];\n\n    pointAxis((axis) =>\n      assertBetween(sut.velocity[axis], 0, expected[axis], axis),\n    );\n  },\n);\n\ntest(\n  'A boid should maintain distance from closer neighbors',\n  [\n    [point(10), point(-1)],\n    [point(-10), point(1)],\n    // out of range\n    [point(20), point(0)],\n  ],\n  (pos, expected) => {\n    const lulas = createTestLulas({\n      behaviors: [separationBehavior],\n      cells: [\n        createCell({ position: point(0), velocity: point(0), vision: 50 }),\n        createCell({ position: { ...pos }, velocity: point(0) }),\n      ],\n    });\n\n    lulas.step();\n    const sut = lulas.cells[0];\n\n    pointAxis((axis) =>\n      assertBetween(sut.velocity[axis], 0, expected[axis], axis),\n    );\n  },\n);\n","import * as assert from 'assert';\n\nexport function assertBetween(\n  value: number,\n  first: number,\n  second: number,\n  message = '',\n) {\n  const min = Math.min(first, second);\n  const max = Math.max(first, second);\n  const finalMessage = `Expected ${value} to be between ${min} and ${max} (${message})`;\n\n  if (min === max) {\n    assert(value === min, finalMessage);\n    return;\n  }\n\n  assert(value > min, finalMessage);\n  assert(value < max, finalMessage);\n}\n","import * as assert from 'assert';\n\nimport { solidBody } from '../src/behaviors/solidBody';\nimport { createCell } from '../src/cell';\nimport { point, pointAxis } from '../src/point';\nimport { setFilename, test } from '../test/index';\nimport { createTestLulas } from '../test/test-duplicates';\n\nsetFilename(__dirname, __filename);\n\ntest(\n  'Cells should immediately separate each other if they overlap',\n  [\n    [point(1, 0), point(-1, 0), point(5, 0)],\n    [point(0, 1), point(0, -1), point(0, 5)],\n    [point(1), point(-1), point(3.5355339059327378)],\n  ],\n  (pos1, pos2, expected) => {\n    const lulas = createTestLulas({\n      behaviors: [solidBody],\n      cells: [\n        createCell({ position: { ...pos1 }, velocity: point(0) }),\n        createCell({ position: { ...pos2 }, velocity: point(0) }),\n      ],\n    });\n\n    lulas.step();\n    const sut = lulas.cells[0];\n\n    pointAxis((axis) => assert.equal(sut.position[axis], expected[axis]));\n  },\n);\n\ntest('Cells should stop if they collide on each other', () => {\n  const lulas = createTestLulas({\n    behaviors: [solidBody],\n    cells: [\n      createCell({ position: point(1), velocity: point(-1) }),\n      createCell({ position: point(-1), velocity: point(0) }),\n    ],\n  });\n\n  lulas.step();\n  const sut = lulas.cells[0];\n\n  pointAxis((axis) => assert(sut.velocity[axis] >= 0));\n});\n","export function getSign(value: number) {\n  if (value === 0) {\n    return 0;\n  }\n\n  return value / Math.abs(value);\n}\n"],"sourceRoot":""}